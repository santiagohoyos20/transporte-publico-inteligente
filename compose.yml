version: "3.9"

services:
  db_auth:
    image: postgres:16
    container_name: db_auth
    restart: unless-stopped
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d auth"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
        - app-network

  auth:
    build: 
      context: .
      dockerfile: Dockerfile.auth
    container_name: auth
    restart: unless-stopped
    depends_on:
      db_auth:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://user:pass@db_auth:5432/auth"
      JWT_SECRET: "if-at-first-you-don't-succeed-dust-yourself-off-and-try-again"
    ports:
      - "3000:3000"
    command: sh -c "npx prisma migrate deploy && npx ts-node prisma/seed.ts && npm run start:dev"
    networks:
      - app-network

  db_users:
    image: postgres:16
    container_name: db_users
    restart: unless-stopped
    environment:
      POSTGRES_DB: db_users
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d db_users"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
        - app-network

  users:
    build:
      context: .
      dockerfile: Dockerfile.users
    container_name: users
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://user:pass@db_users:5432/db_users
    depends_on:
      db_users:
        condition: service_healthy
    ports:
      - "3001:3001"
      - "50051:50051"
    command: sh -c "npx prisma migrate deploy && npm run start:dev"
    networks:
      - app-network



networks:
  app-network:
    driver: bridge